#version 400

in vec4 vNormal;
in vec3 vLightDir;
in vec2 vUV;

uniform vec4 vAmbient;
uniform vec3 vSpecular;
uniform sampler2D Texture;

out vec4 outputColor;

void main(void)
{
	float diff = max(0.0, dot(normalize(vNormal.xyz), vLightDir));

	outputColor = vec4(texture2D(Texture, vUV).rgb * diff, 1.0f);
	outputColor += vAmbient;

	// Specular
	if(diff > 0)
	{
		vec3 vReflection = normalize(reflect(-normalize(vLightDir), normalize(vNormal.xyz)));
		float spec = max(0.0, dot(normalize(vNormal.xyz), vReflection));
	
		float fSpec = pow(spec, 128.0);
		outputColor.rgb += vSpecular * fSpec;
	}
}